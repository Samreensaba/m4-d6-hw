{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samre\\\\OneDrive\\\\Desktop\\\\WebDevelopment\\\\m4-d6-hw\\\\src\\\\components\\\\CommentArea.jsx\",\n    _s = $RefreshSig$();\n\nimport { Component } from 'react';\nimport CommentList from './CommentList';\nimport AddComment from './AddComment';\nimport Loading from './Loading';\nimport Error from './Error';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentArea = ({\n  asin\n}) => {\n  _s();\n\n  //state = {\n  //    comments: [], // comments will go here\n  //    isLoading: false,\n  //    isError: false\n  //}\n  const [comments, setComments] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false); //componentDidUpdate = async (prevProps) => {\n  //    if (prevProps.asin !== this.props.asin) {\n  //        this.setState({\n  //            isLoading: true\n  //        })}\n\n  useEffect(() => {\n    fetchComments(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    fetchComments();\n  }, [asin]);\n\n  const fetchComments = async () => {\n    try {\n      let response = await fetch('https://striveschool-api.herokuapp.com/api/comments/' + asin, {\n        headers: {\n          Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MmEzMzk4MjdmZmQ0OTAwMTU4YTdhOTkiLCJpYXQiOjE2NTY0MjE0MDEsImV4cCI6MTY1NzYzMTAwMX0.3tF4nKWr5mvRAfq0KhScHfKgQV0jE4xk7Yg1y-7XOtk'\n        }\n      });\n      console.log(response);\n\n      if (response.ok) {\n        let comments = await response.json();\n        setComments(comments);\n        setIsLoading(false);\n        setIsError(false); //this.setState({ comments: comments, isLoading: false, isError: false })\n      } else {\n        console.log('error'); //this.setState({ isLoading: false, isError: true })\n\n        setIsError(true);\n        setIsLoading(false);\n      }\n    } catch (error) {\n      console.log(error); //this.setState({ isLoading: false, isError: true })\n\n      setIsError(true);\n      setIsLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 31\n    }, this), isError && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(AddComment, {\n      asin: asin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(CommentList, {\n      commentsToShow: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 13\n  }, this);\n};\n\n_s(CommentArea, \"jImNPami6Jso9Vk7/zGwKtb8OE4=\");\n\n_c = CommentArea;\nexport default CommentArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentArea\");","map":{"version":3,"sources":["C:/Users/samre/OneDrive/Desktop/WebDevelopment/m4-d6-hw/src/components/CommentArea.jsx"],"names":["Component","CommentList","AddComment","Loading","Error","useState","useEffect","CommentArea","asin","comments","setComments","isLoading","setIsLoading","isError","setIsError","fetchComments","response","fetch","headers","Authorization","console","log","ok","json","error"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,WAAW,GAAC,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAW;AAAA;;AAEzB;AACA;AACA;AACA;AACA;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA2BP,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC,CATyB,CAUzB;AACA;AACA;AACA;AACA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,aAAa,GADD,CAEZ;AACD,GAHM,EAGJ,EAHI,CAAT;AAKAT,EAAAA,SAAS,CAAC,MAAI;AACVS,IAAAA,aAAa;AAChB,GAFQ,EAEP,CAACP,IAAD,CAFO,CAAT;;AAIQ,QAAMO,aAAa,GAAG,YAAS;AAC/B,QAAI;AACA,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yDAAyDT,IAA1D,EAAgE;AACtFU,QAAAA,OAAO,EAAE;AACLC,UAAAA,aAAa,EAAE;AADV;AAD6E,OAAhE,CAA1B;AAKAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;;AACA,UAAIA,QAAQ,CAACM,EAAb,EAAiB;AACb,YAAIb,QAAQ,GAAG,MAAMO,QAAQ,CAACO,IAAT,EAArB;AACAb,QAAAA,WAAW,CAACD,QAAD,CAAX;AACAG,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,UAAU,CAAC,KAAD,CAAV,CAJa,CAKb;AACH,OAND,MAMO;AACHM,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EADG,CAEH;;AACAP,QAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,KAnBD,CAmBE,OAAOY,KAAP,EAAc;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ,EADY,CAEZ;;AACAV,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,GA1BG;;AA2BJ,sBACI;AAAA,eACKD,SAAS,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADlB,EAEKE,OAAO,iBAAI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAFhB,eAGI,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEL;AAAlB;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,WAAD;AAAa,MAAA,cAAc,EAAEC;AAA7B;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA3DL;;GAAMF,W;;KAAAA,W;AAkEN,eAAeA,WAAf","sourcesContent":["import { Component } from 'react'\r\nimport CommentList from './CommentList'\r\nimport AddComment from './AddComment'\r\nimport Loading from './Loading'\r\nimport Error from './Error'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\n\r\nconst CommentArea=({asin})=> {\r\n\r\n    //state = {\r\n    //    comments: [], // comments will go here\r\n    //    isLoading: false,\r\n    //    isError: false\r\n    //}\r\n    const [comments, setComments] = useState([])\r\n    const [isLoading, setIsLoading]= useState(false)\r\n    const [isError, setIsError] = useState(false)\r\n    //componentDidUpdate = async (prevProps) => {\r\n    //    if (prevProps.asin !== this.props.asin) {\r\n    //        this.setState({\r\n    //            isLoading: true\r\n    //        })}\r\n    useEffect(() => {\r\n        fetchComments();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      }, [])\r\n\r\n    useEffect(()=>{\r\n        fetchComments();\r\n    },[asin])\r\n\r\n            const fetchComments = async()=>{\r\n            try {\r\n                let response = await fetch('https://striveschool-api.herokuapp.com/api/comments/' + asin, {\r\n                    headers: {\r\n                        Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MmEzMzk4MjdmZmQ0OTAwMTU4YTdhOTkiLCJpYXQiOjE2NTY0MjE0MDEsImV4cCI6MTY1NzYzMTAwMX0.3tF4nKWr5mvRAfq0KhScHfKgQV0jE4xk7Yg1y-7XOtk'\r\n                    }\r\n                })\r\n                console.log(response)\r\n                if (response.ok) {\r\n                    let comments = await response.json()\r\n                    setComments(comments)\r\n                    setIsLoading(false)\r\n                    setIsError(false)\r\n                    //this.setState({ comments: comments, isLoading: false, isError: false })\r\n                } else {\r\n                    console.log('error')\r\n                    //this.setState({ isLoading: false, isError: true })\r\n                    setIsError(true)\r\n                    setIsLoading(false)\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n                //this.setState({ isLoading: false, isError: true })\r\n                setIsError(true)\r\n                setIsLoading(false)\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                {isLoading && <Loading />}\r\n                {isError && <Error />}\r\n                <AddComment asin={asin} />\r\n                <CommentList commentsToShow={comments} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n        \r\n    \r\n\r\n\r\nexport default CommentArea"]},"metadata":{},"sourceType":"module"}